# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-12 02:57
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import localflavor.us.models
import security.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('organization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('phone', localflavor.us.models.PhoneNumberField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('city', models.CharField(blank=True, max_length=250, null=True, verbose_name='City')),
                ('state', localflavor.us.models.USStateField(blank=True, db_index=True, max_length=2, null=True, verbose_name='State')),
                ('zip', localflavor.us.models.USZipCodeField(blank=True, max_length=10, null=True, verbose_name='Zip')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('assigned_to', models.CharField(blank=True, max_length=250, null=True, verbose_name='Assigned To')),
                ('campus_lead', models.BooleanField(default=False, verbose_name='Campus Lead')),
                ('facebook_moderator', models.BooleanField(default=False, verbose_name='Facebook Moderator')),
                ('date_welcome_packet_sent', models.DateField(blank=True, null=True, verbose_name='Date Welcome Packet Sent')),
                ('invited_to_slack', models.BooleanField(default=False, verbose_name='Invited to Slack')),
                ('sent_nda', models.BooleanField(default=False, verbose_name='Sent NDA')),
                ('returned_nda', models.BooleanField(default=False, verbose_name='Returned NDA')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates that this user has access to the Django admin', verbose_name='Is Staff')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has access to all organizations', verbose_name='Is Superuser')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('comments', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Comments')),
                ('dt_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('dt_last_login', models.DateTimeField(blank=True, null=True, verbose_name='Last Login')),
                ('password_reset', models.BooleanField(default=False, verbose_name='Password Reset')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', security.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=20, verbose_name='Key')),
                ('type', models.CharField(max_length=100, verbose_name='Type')),
                ('permission_hierarchy', models.PositiveSmallIntegerField(verbose_name='Permission Hierarchy')),
                ('ordering', models.PositiveSmallIntegerField(verbose_name='Ordering')),
            ],
            options={
                'ordering': ['ordering'],
                'verbose_name': 'Account Type',
                'verbose_name_plural': 'Account Types',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100, verbose_name='Position')),
                ('ordering', models.PositiveSmallIntegerField(verbose_name='Ordering')),
            ],
            options={
                'ordering': ['ordering'],
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.CharField(max_length=100, verbose_name='Team')),
                ('ordering', models.PositiveSmallIntegerField(verbose_name='Ordering')),
            ],
            options={
                'ordering': ['ordering'],
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='account_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='security.AccountType', verbose_name='Account Type'),
        ),
        migrations.AddField(
            model_name='user',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='organizations',
            field=models.ManyToManyField(blank=True, to='organization.Organization', verbose_name='Organizations'),
        ),
        migrations.AddField(
            model_name='user',
            name='teams',
            field=models.ManyToManyField(blank=True, to='security.Team', verbose_name='Teams'),
        ),
        migrations.AddField(
            model_name='user',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
